.. _reporting-bugs:

**************
报告 Bug
**************

Python 是一个成熟的编程语言，素有运行稳定的美誉。为了保持这样的名声，开发者需要知道你在使用 Python 时感觉任何不足之处。


文档中的 bug
==================

如果你发现这些文档中有 bug，或者想提出改进意见，请发一封邮件到 docs@python.org，并描述你发现的问题以及在哪里发现的。如果你有改正的建议，请一并附上。

docs@python.org 是一个由志愿者管理的邮件列表。你的建议会有人注意的，即使它需要花一点时间。

当然，如果你想让自己的提案有持续的记录，你也可以用问题跟踪系统来跟踪文档中的 bug。


使用 Python 的问题跟踪系统
==============================

对 Python 本身的 bug 报告应该提交到 Python Bug 跟踪系统 (http://bugs.python.org/) 中。这个系统有个网页表单，可以在此向开发者提交持久化的信息。

提交报告的第一步是看看这个问题是不是已经有个提交过。这样做除了能节省开发者的时间，还能让你了解到为了解决这个问题已经做了哪些工作。有可能这个问题已经在下次发布的版本中解决了，或者需要额外的信息（这时如果你能做到的话就请提供！）。为此，请使用页面顶部的搜索框来查询 bug 数据库。

如果你报告的问题不在系统中，就回到 Python Bug 跟踪系统并把它记录下来。如果你还没有跟踪系统的帐号，点击"注册"链接，或者如果你有 OpenID 的话，点击边栏中的 OpenID 图标。系统不允许匿名提交报告。

登录以后，你就可以提交 bug 了。点击边栏中的"创建新 Bug"可以打开 bug 表单。

Bug 提交表单有好些字段。在"标题"框中，输入对问题的 *很* 简短的描述，最好不超过十个字。在"类型"框中，选择问题的类型，同时要选择和问题相关的"模块"和"版本"。

在"备注"框中，详细的描述问题，包括你期待看到什么以及实际看到了什么。注意说明是否涉及到扩展模块，以及你所使用的硬件和软件（如有必要，要附上版本号）。

每个 bug 报告都会分配给一个开发者，并由他来决定怎么处理该问题。对于这个 bug 的每次处理，你都会收到通知。


.. seealso::

   `Python 开发指南 <http://docs.python.org/devguide/>`_
      详细描述 bug 的处理流程和开发工具。

   `怎么有效的报告 Bug <http://www.chiark.greenend.org.uk/~sgtatham/bugs.html>`_
      一篇颇有深度的文章，讲述如何创建一个有用的 bug 报告。它说明什么信息是有用的，以及它们为什么有用。

   `Bug 撰写准则 <http://developer.mozilla.org/en/docs/Bug_writing_guidelines>`_
      关于怎么写好 bug 报告的信息。这里有些内容是和 Mozilla 项目相关的，但不失为普适的准则。

